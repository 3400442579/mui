<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Ant.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Converters.xaml" />
        <ResourceDictionary Source="Animations.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ButtonBase" TargetType="Button" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeBase}" />
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="local:ButtonAssist.CornerRadius" Value="{DynamicResource BorderRadiusBase}"/>
        <Setter Property="local:ButtonAssist.Icon" Value=""/>
        <Setter Property="local:ButtonAssist.Shape" Value=""/>
        <Setter Property="local:ButtonAssist.Size" Value=""/>
        <Setter Property="local:ButtonAssist.Danger" Value="False"/>

        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Name="Effect"   
                                Margin="-1"
                                Opacity="0.4"
                                Focusable="False"
                                BorderThickness="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding local:ButtonAssist.CornerRadius}"/>

                        <local:ClipBorder x:Name="PART_Border"
                                          CornerRadius="{TemplateBinding local:ButtonAssist.CornerRadius}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          UseLayoutRounding="True"
                                          Padding="{TemplateBinding Padding}"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <!-- Icon -->
                                    <ColumnDefinition Width="Auto" />
                                    <!-- Content -->
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <local:PackIcon x:Name="Icon" 
                                               Margin="0 0 8 0"
                                               Focusable="False" 
                                               Icon="{TemplateBinding local:ButtonAssist.Icon}" />
                                
                                <ContentPresenter x:Name="Content"
                                                  Grid.Column="1"
                                                  RecognizesAccessKey="True"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Grid>
                        </local:ClipBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    <VisualTransition GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{StaticResource EaseInOut}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{StaticResource EaseInOut}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LoadStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Loaded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.65" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Icon" Property="local:ButtonAssist.Icon" Value="{x:Null}">
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="Icon" Property="local:ButtonAssist.Icon" Value="{x:Null}">
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource Accent4}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent2}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent3}" />
                        </Trigger>

                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard Storyboard="{StaticResource Ant.ClickAnimating}" />
                        </EventTrigger>

                        <!-- Danger -->
                        <Trigger Property="local:ButtonAssist.Danger" Value="True">
                            <Setter TargetName="Effect" Property="BorderBrush" Value="{DynamicResource ButtonDangerForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDangerForeground}" />
                            <Setter Property="Background" Value="{DynamicResource ButtonDangerBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonDangerBorder}" />
                        </Trigger>
                        <!-- Size -->
                        <Trigger Property="local:ButtonAssist.Size" Value="Large">
                            <Setter Property="Height" Value="{DynamicResource ButtonHeightLarge}" />
                            <Setter Property="Padding" Value="{DynamicResource ButtonPaddingLarge}" />
                            <Setter Property="FontSize" Value="{DynamicResource ButtonFontSizeLarge}" />
                        </Trigger>
                        <Trigger Property="local:ButtonAssist.Size" Value="Small">
                            <Setter Property="Height" Value="{DynamicResource ButtonHeightSmall}" />
                            <Setter Property="Padding" Value="{DynamicResource ButtonPaddingSmall}" />
                            <Setter Property="FontSize" Value="{DynamicResource ButtonFontSizeSmall}" />
                            <Setter Property="local:ButtonAssist.CornerRadius" Value="{DynamicResource ButtonBorderRadiusSmall}" />
                        </Trigger>
                        <!-- Shape Circle -->
                        <Trigger Property="local:ButtonAssist.Shape" Value="Circle">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Width" Value="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="local:ButtonAssist.CornerRadius" Value="{Binding Height, Mode=OneWay, RelativeSource={RelativeSource Self}, 
                                                                            Converter={StaticResource DoubleToCornerRadiusConverter}, ConverterParameter=2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            
            <!-- Disabled -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <!--<Condition Property="Loading" Value="False" />-->
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ButtonDisableForeground}" />
                <Setter Property="Background" Value="{DynamicResource ButtonDisableBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisableBorder}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    
    <Style x:Key="OutlinedButton" TargetType="Button" >
    </Style>

    <Style x:Key="DashedButton" TargetType="Button" >
    </Style>

    <Style x:Key="AccentButton" TargetType="Button" >
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource Accent}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="local:ButtonAssist.CornerRadius" Value="3"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" CornerRadius="{TemplateBinding local:ButtonAssist.CornerRadius}">
                        <local:ClipBorder  CornerRadius="{TemplateBinding local:ControlsHelper.CornerRadius}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        
                        </local:ClipBorder>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource Accent4}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent2}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

   
</ResourceDictionary>