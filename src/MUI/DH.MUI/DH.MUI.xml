<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DH.MUI</name>
    </assembly>
    <members>
        <member name="T:DH.MUI.Controls.Bitmap">
            <summary>
            按Bitmap px 显示 ，不管dpi
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.Bitmap.SourceProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.Bitmap.Source"/> dependency property.</summary>
        </member>
        <member name="T:DH.MUI.Controls.ClipBorder">
            <summary>
            Represents a border whose contents are clipped within the bounds
            of the border. The border may have rounded corners.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ClipBorder.BorderThicknessProperty">
            <summary>
            BorderThickness Dependency Property
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ClipBorder.BorderThickness">
            <summary>
            Gets or sets the BorderThickness property. This dependency property 
            indicates the BorderThickness.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ClipBorder.OnValidateThickness(System.Object)">
            <summary>
            Checks if the given Thickness is valid or not
            </summary>
            <param name="value">Thickness</param>
            <returns></returns>
        </member>
        <member name="F:DH.MUI.Controls.ClipBorder.PaddingProperty">
            <summary>
            Padding Dependency Property
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ClipBorder.Padding">
            <summary>
            Gets or sets the Padding property. This dependency property 
            indicates the Padding.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ClipBorder.CornerRadiusProperty">
            <summary>
            CornerRadius Dependency Property
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ClipBorder.CornerRadius">
            <summary>
            Gets or sets the CornerRadius property. This dependency property 
            indicates the CornerRadius of the border.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ClipBorder.ValidateCornerRadius(System.Object)">
            <summary>
            Checks if the given CornerRadius is valid or not
            </summary>
            <param name="value">CornerRadius</param>
            <returns></returns>
        </member>
        <member name="F:DH.MUI.Controls.ClipBorder.BorderBrushProperty">
            <summary>
            BorderBrush Dependency Property
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ClipBorder.BorderBrush">
            <summary>
            Gets or sets the BorderBrush property. This dependency property 
            indicates the BorderBrush with which the Border is drawn.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ClipBorder.BackgroundProperty">
            <summary>
            Background Dependency Property
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ClipBorder.Background">
            <summary>
            Gets or sets the Background property. This dependency property 
            indicates the Background with which the Background is drawn.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ClipBorder.OptimizeClipRenderingProperty">
            <summary>
            OptimizeClipRendering Dependency Property
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ClipBorder.OptimizeClipRendering">
            <summary>
            Gets or sets the OptimizeClipRendering property. This dependency property 
            indicates whether the rendering of the clip should be optimized. When set to true,
            In order to optimize the rendering of the clipped Child,
            the background is rendered with the same brush as the border. Any other brush set for
            the background will be ignored. The Child will be rendered on top of it. 
            This is done to prevent any gaps between the border the the clipped Child (this is 
            evidently visible if both the Border and the Child are of same color).
            This works best when the Child does not have any level of transparency and is opaque.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ClipBorder.MeasureOverride(System.Windows.Size)">
            <summary>
            Updates DesiredSize of the ClipBorder.  Called by parent UIElement.  This is the first pass of layout.
            </summary>
            <remarks>
            Border determines its desired size it needs from the specified border the child: its sizing
            properties, margin, and requested size.
            </remarks>
            <param name="constraint">Constraint size is an "upper limit" that the return value should not exceed.</param>
            <returns>The Decorator's desired size.</returns>
        </member>
        <member name="M:DH.MUI.Controls.ClipBorder.ArrangeOverride(System.Windows.Size)">
            <summary>
            ClipBorder computes the position of its single child and applies its child's alignments to the child.
            
            </summary>
            <param name="finalSize">The size reserved for this element by the parent</param>
            <returns>The actual ink area of the element, typically the same as finalSize</returns>
        </member>
        <member name="M:DH.MUI.Controls.ClipBorder.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Here the ClipBorder's Child, Border and Background are rendered.
            </summary>
            <param name="dc">Drawing Context</param>
        </member>
        <member name="M:DH.MUI.Controls.ClipBorder.GenerateGeometry(System.Windows.Media.StreamGeometryContext,System.Windows.Rect,DH.MUI.Controls.ClipBorder.BorderInfo)">
            <summary>
                Generates a StreamGeometry.
            </summary>
            <param name="ctx">An already opened StreamGeometryContext.</param>
            <param name="rect">Rectangle for geomentry conversion.</param>
            <param name="borderInfo">The core points of the border which needs to be used to create
            the geometry</param>
            <returns>Result geometry.</returns>
        </member>
        <member name="M:DH.MUI.Controls.ClipBorder.BorderInfo.#ctor(System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Boolean)">
            <summary>
            Encapsulates the details of each of the core points of the border which is calculated
            based on the given CornerRadius, BorderThickness, Padding and a flag to indicate whether
            the inner or outer border is to be calculated.
            </summary>
            <param name="corners">CornerRadius</param>
            <param name="borders">BorderThickness</param>
            <param name="padding">Padding</param>
            <param name="isOuterBorder">Flag to indicate whether outer or inner border needs 
            to be calculated</param>
        </member>
        <member name="T:DH.MUI.Controls.Utils">
            <summary>
            A few very useful extension methods
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsCloseTo(System.Double,System.Double)">
            <summary>
            Returns whether or not two doubles are "close". 
            </summary>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsLessThan(System.Double,System.Double)">
            <summary>
            Returns whether or not the first double is less than the second double.
            </summary>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
            <returns>
            bool - the result of the LessThan comparision.
            </returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Returns whether or not the first double is greater than the second double.
            </summary>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
            <returns>
            bool - the result of the GreaterThan comparision.
            </returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsOne(System.Double)">
            <summary>
            Returns whether or not the double is "close" to 1.  Same as AreClose(double, 1),
            but this is faster.
            </summary>
            <param name="value"> The double to compare to 1. </param>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsZero(System.Double)">
            <summary>
            IsZero - Returns whether or not the double is "close" to 0.  Same as AreClose(double, 0),
            but this is faster.
            </summary>
            <param name="value"> The double to compare to 0. </param>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsCloseTo(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compares two points for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='point1'>The first point to compare</param>
            <param name='point2'>The second point to compare</param>
            <returns>Whether or not the two points are equal</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsCloseTo(System.Windows.Size,System.Windows.Size)">
            <summary>
            Compares two Size instances for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='size1'>The first size to compare</param>
            <param name='size2'>The second size to compare</param>
            <returns>Whether or not the two Size instances are equal</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsCloseTo(System.Windows.Vector,System.Windows.Vector)">
            <summary>
            Compares two Vector instances for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='vector1'>The first Vector to compare</param>
            <param name='vector2'>The second Vector to compare</param>
            <returns>Whether or not the two Vector instances are equal</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsCloseTo(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Compares two rectangles for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='rect1'>The first rectangle to compare</param>
            <param name='rect2'>The second rectangle to compare</param>
            <returns>Whether or not the two rectangles are equal</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsNaN(System.Double)">
            <summary>
            Faster check for NaN ( faster than double.IsNaN() )
            IEEE 754 : If the argument is any value in the range 0x7ff0000000000001L through 0x7fffffffffffffffL 
            or in the range 0xfff0000000000001L through 0xffffffffffffffffL, the result will be NaN.
            </summary>
            <param name="value">Value to check</param>
            <returns></returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.RoundLayoutValue(System.Double,System.Double)">
            <summary>
            Rounds the given value based on the DPI scale
            </summary>
            <param name="value">Value to round</param>
            <param name="dpiScale">DPI Scale</param>
            <returns></returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsValid(System.Windows.Thickness,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Verifies if this Thickness contains only valid values
            The set of validity checks is passed as parameters.
            </summary>
            <param name='thick'>Thickness value</param>
            <param name='allowNegative'>allows negative values</param>
            <param name='allowNaN'>allows Double.NaN</param>
            <param name='allowPositiveInfinity'>allows Double.PositiveInfinity</param>
            <param name='allowNegativeInfinity'>allows Double.NegativeInfinity</param>
            <returns>Whether or not the thickness complies to the range specified</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.CollapseThickness(System.Windows.Thickness)">
            <summary>
            Method to add up the left and right size as width, as well as the top and bottom size as height
            </summary>
            <param name="thick">Thickness</param>
            <returns>Size</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsZero(System.Windows.Thickness)">
            <summary>
            Verifies if the Thickness contains only zero values
            </summary>
            <param name="thick">Thickness</param>
            <returns>Size</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsUniform(System.Windows.Thickness)">
            <summary>
            Verifies if all the values in Thickness are same
            </summary>
            <param name="thick">Thickness</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsValid(System.Windows.CornerRadius,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Verifies if this CornerRadius contains only valid values
            The set of validity checks is passed as parameters.
            </summary>
            <param name='corner'>CornerRadius value</param>
            <param name='allowNegative'>allows negative values</param>
            <param name='allowNaN'>allows Double.NaN</param>
            <param name='allowPositiveInfinity'>allows Double.PositiveInfinity</param>
            <param name='allowNegativeInfinity'>allows Double.NegativeInfinity</param>
            <returns>Whether or not the CornerRadius complies to the range specified</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsZero(System.Windows.CornerRadius)">
            <summary>
            Verifies if the CornerRadius contains only zero values
            </summary>
            <param name="corner">CornerRadius</param>
            <returns>Size</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsUniform(System.Windows.CornerRadius)">
            <summary>
            Verifies if the CornerRadius contains same values
            </summary>
            <param name="corner">CornerRadius</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.Deflate(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Deflates rectangle by given thickness
            </summary>
            <param name="rect">Rectangle</param>
            <param name="thick">Thickness</param>
            <returns>Deflated Rectangle</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.Inflate(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Inflates rectangle by given thickness
            </summary>
            <param name="rect">Rectangle</param>
            <param name="thick">Thickness</param>
            <returns>Inflated Rectangle</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsOpaqueSolidColorBrush(System.Windows.Media.Brush)">
            <summary>
            Verifies if the given brush is a SolidColorBrush and
            its color does not include transparency.
            </summary>
            <param name="brush">Brush</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="M:DH.MUI.Controls.Utils.IsEqualTo(System.Windows.Media.Brush,System.Windows.Media.Brush)">
            <summary>
            Verifies if the given brush is the same as the otherBrush.
            </summary>
            <param name="brush">Brush</param>
            <param name="otherBrush">Brush</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="F:DH.MUI.Controls.ContentControlEx.ContentCharacterCasingProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ContentControlEx.ContentCharacterCasing"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.ContentControlEx.ContentCharacterCasing">
            <summary> 
            The DependencyProperty for the CharacterCasing property.
            Controls whether or not content is converted to upper or lower case
            Default Value: CharacterCasing.Normal
            </summary> 
        </member>
        <member name="F:DH.MUI.Controls.ContentControlEx.RecognizesAccessKeyProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ContentControlEx.RecognizesAccessKey"/> dependency property.</summary> 
        </member>
        <member name="P:DH.MUI.Controls.ContentControlEx.RecognizesAccessKey">
            <summary> 
            Determine if the inner ContentPresenter should use AccessText in its style
            </summary> 
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ClickEvent">
            <summary>Identifies the <see cref="E:DH.MUI.Controls.DropDownButton.Click"/> routed event.</summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.IsExpandedProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.IsExpanded"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.IsExpanded">
            <summary> 
            Whether or not the "popup" menu for this control is currently open
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ExtraTagProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ExtraTag"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ExtraTag">
            <summary>
            Gets or sets an extra tag.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.OrientationProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.Orientation"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.Orientation">
            <summary>
            Gets or sets the orientation of children stacking.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.IconProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.Icon"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.Icon">
            <summary>
            Gets or sets the content for the icon part.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.IconTemplateProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.IconTemplate"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.IconTemplate">
            <summary> 
            Gets or sets the DataTemplate for the icon part.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.CommandProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.Command"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.Command">
            <summary>
            Gets or sets the command to invoke when the content button is pressed.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.CommandTargetProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.CommandTarget"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.CommandTarget">
            <summary>
            Gets or sets the element on which to raise the specified command.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.CommandParameterProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.CommandParameter"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.CommandParameter">
            <summary>
            Gets or sets the parameter to pass to the command property.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ContentProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.Content"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.Content">
            <summary>
            Gets or sets the content of this control.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ContentTemplateProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ContentTemplate"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ContentTemplate">
            <summary> 
            Gets or sets the data template used to display the content of the DropDownButton.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ContentTemplateSelectorProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ContentTemplateSelector"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ContentTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide custom template-selection logic.
            </summary>
            <remarks> 
            This property is ignored if <seealso cref="P:DH.MUI.Controls.DropDownButton.ContentTemplate"/> is set.
            </remarks>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ContentStringFormatProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ContentStringFormat"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ContentStringFormat">
            <summary>
            Gets or sets a composite string that specifies how to format the content property if it is displayed as a string.
            </summary>
            <remarks> 
            This property is ignored if <seealso cref="P:DH.MUI.Controls.DropDownButton.ContentTemplate"/> is set.
            </remarks>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ButtonStyleProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ButtonStyle"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ButtonStyle">
            <summary>
            Gets or sets the button content style.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.MenuStyleProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.MenuStyle"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.MenuStyle">
            <summary>
            Gets or sets the "popup" menu style.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ArrowBrushProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ArrowBrush"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ArrowBrush">
            <summary>
            Gets or sets the foreground brush for the button arrow icon.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ArrowMouseOverBrushProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ArrowMouseOverBrush"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ArrowMouseOverBrush">
            <summary>
            Gets or sets the foreground brush of the button arrow icon if the mouse is over the drop down button.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ArrowPressedBrushProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ArrowPressedBrush"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ArrowPressedBrush">
            <summary>
            Gets or sets the foreground brush of the button arrow icon if the arrow button is pressed.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.DropDownButton.ArrowVisibilityProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.DropDownButton.ArrowVisibility"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.DropDownButton.ArrowVisibility">
            <summary>
            Gets or sets the visibility of the button arrow icon.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.DropDownButton.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:DH.MUI.Controls.Helper.AnimationHelper.CreateAnimation(System.Windows.Thickness,System.Double)">
            <summary>
                创建一个Thickness动画
            </summary>
            <param name="thickness"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:DH.MUI.Controls.Helper.AnimationHelper.CreateAnimation(System.Double,System.Double)">
            <summary>
                创建一个Double动画
            </summary>
            <param name="toValue"></param>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="T:DH.MUI.Controls.ControlsHelper">
            <summary>
            A helper class that provides various controls.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.GetDisabledVisualElementVisibility(System.Windows.UIElement)">
            <summary>
            Gets the value to handle the visibility of the DisabledVisualElement in the template.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.SetDisabledVisualElementVisibility(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value to handle the visibility of the DisabledVisualElement in the template.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to set <see cref="F:DH.MUI.Controls.ControlsHelper.DisabledVisualElementVisibilityProperty"/> on.</param>
        </member>
        <member name="F:DH.MUI.Controls.ControlsHelper.ContentCharacterCasingProperty">
            <summary>
            The DependencyProperty for the CharacterCasing property.
            Controls whether or not content is converted to upper or lower case
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.GetContentCharacterCasing(System.Windows.UIElement)">
            <summary>
            Gets the character casing of the control
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.SetContentCharacterCasing(System.Windows.UIElement,System.Windows.Controls.CharacterCasing)">
            <summary>
            Sets the character casing of the control
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.GetFocusBorderBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the brush used to draw the focus border.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.SetFocusBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the brush used to draw the focus border.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.GetFocusBorderThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the brush used to draw the focus border.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.SetFocusBorderThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
            <summary>
            Sets the brush used to draw the focus border.
            </summary>
            <param name="obj"><see cref="T:System.Windows.DependencyObject"/> to set <see cref="F:DH.MUI.Controls.ControlsHelper.FocusBorderThicknessProperty"/> on.</param>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.GetMouseOverBorderBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the brush used to draw the mouse over brush.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.GetCornerRadius(System.Windows.UIElement)">
            <summary> 
            The CornerRadius property allows users to control the roundness of the button corners independently by 
            setting a radius value for each corner. Radius values that are too large are scaled so that they
            smoothly blend from corner to corner. (Can be used e.g. at MetroButton style)
            Description taken from original Microsoft description :-D
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ControlsHelper.IsReadOnlyProperty">
            <summary>
            Gets or sets a value indicating whether the child contents of the control are not editable.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.GetIsReadOnly(System.Windows.UIElement)">
            <summary>
            Gets a value indicating whether the child contents of the control are not editable.
            </summary>
            <returns>IsReadOnly property value.</returns>
        </member>
        <member name="M:DH.MUI.Controls.ControlsHelper.SetIsReadOnly(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets a value indicating whether the child contents of the control are not editable.
            </summary>
        </member>
        <member name="T:DH.MUI.Controls.TreeHelper">
            <summary>
            Helper methods for UI-related tasks.
            This class was obtained from Philip Sumi (a fellow WPF Disciples blog)
            http://www.hardcodet.net/uploads/2009/06/UIHelper.cs
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.TreeHelper.TryFindParent``1(System.Windows.DependencyObject)">
            <summary>
            Finds a parent of a given item on the visual tree.
            </summary>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="child">A direct or indirect child of the
            queried item.</param>
            <returns>The first parent item that matches the submitted
            type parameter. If not matching item can be found, a null
            reference is being returned.</returns>
        </member>
        <member name="M:DH.MUI.Controls.TreeHelper.GetAncestors(System.Windows.DependencyObject)">
            <summary>
            Finds all Ancestors of a given item on the visual tree.
            </summary>
            <param name="child">A node in a visual tree</param>
            <returns>All ancestors in visual tree of <paramref name="child"/> element</returns>
        </member>
        <member name="M:DH.MUI.Controls.TreeHelper.FindChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            Finds a Child of a given item in the visual tree. 
            </summary>
            <param name="parent">A direct parent of the queried item.</param>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="childName">x:Name or Name of child. </param>
            <returns>The first parent item that matches the submitted type parameter. 
            If not matching item can be found, 
            a null parent is being returned.</returns>
        </member>
        <member name="M:DH.MUI.Controls.TreeHelper.GetParentObject(System.Windows.DependencyObject)">
            <summary>
            This method is an alternative to WPF's
            <see cref="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)"/> method, which also
            supports content elements. Keep in mind that for content element,
            this method falls back to the logical tree of the element!
            </summary>
            <param name="child">The item to be processed.</param>
            <returns>The submitted item's parent, if available. Otherwise
            null.</returns>
        </member>
        <member name="M:DH.MUI.Controls.TreeHelper.FindChildren``1(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Analyzes both visual and logical tree in order to find all elements of a given
            type that are descendants of the <paramref name="source"/> item.
            </summary>
            <typeparam name="T">The type of the queried items.</typeparam>
            <param name="source">The root element that marks the source of the search. If the
            source is already of the requested type, it will not be included in the result.</param>
            <param name="forceUsingTheVisualTreeHelper">Sometimes it's better to search in the VisualTree (e.g. in tests)</param>
            <returns>All descendants of <paramref name="source"/> that match the requested type.</returns>
        </member>
        <member name="M:DH.MUI.Controls.TreeHelper.GetChildObjects(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            This method is an alternative to WPF's
            <see cref="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)"/> method, which also
            supports content elements. Keep in mind that for content elements,
            this method falls back to the logical tree of the element.
            </summary>
            <param name="parent">The item to be processed.</param>
            <param name="forceUsingTheVisualTreeHelper">Sometimes it's better to search in the VisualTree (e.g. in tests)</param>
            <returns>The submitted item's child elements, if available.</returns>
        </member>
        <member name="M:DH.MUI.Controls.TreeHelper.TryFindFromPoint``1(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Tries to locate a given item within the visual tree,
            starting with the dependency object at a given position. 
            </summary>
            <typeparam name="T">The type of the element to be found
            on the visual tree of the element at the given location.</typeparam>
            <param name="reference">The main element which is used to perform
            hit testing.</param>
            <param name="point">The position to be evaluated on the origin.</param>
        </member>
        <member name="T:DH.MUI.Controls.ModernButton">
            <summary>
            Adds icon content to a standard button.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ModernButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DH.MUI.Controls.ModernButton"/> class.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernButton.IconProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernButton.Icon"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernButton.Icon">
            <summary>
            Gets or sets the icon path data.
            </summary>
            <value>
            The icon path data.
            </value>
        </member>
        <member name="F:DH.MUI.Controls.ModernButton.IconHeightProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernButton.IconHeight"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernButton.IconHeight">
            <summary>
            Gets or sets the icon height.
            </summary>
            <value>
            The icon height.
            </value>
        </member>
        <member name="F:DH.MUI.Controls.ModernButton.IconWidthProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernButton.IconWidth"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernButton.OrientationProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernButton.Orientation"/> dependency property.</summary>
        </member>
        <member name="T:DH.MUI.Controls.ModernProgressRing">
            <summary>
            Represents a control that indicates that an operation is ongoing. 
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernProgressRing.IsActiveProperty">
            <summary>
            Identifies the IsActive property.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ModernProgressRing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DH.MUI.Controls.ModernProgressRing"/> class.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ModernProgressRing.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernProgressRing.IsActive">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:DH.MUI.Controls.ModernProgressRing"/> is showing progress.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.MultiFrameImage.MultiFrameImageModeProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.MultiFrameImage.MultiFrameImageMode"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ProgressButton.ProgressStyleProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ProgressButton.ProgressStyle"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ProgressButton.ProgressProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ProgressButton.Progress"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ScrollViewer.OrientationProperty">
            <summary>
                滚动方向
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ScrollViewer.Orientation">
            <summary>
                滚动方向
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ScrollViewer.CanMouseWheelProperty">
            <summary>
                是否响应鼠标滚轮操作
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ScrollViewer.CanMouseWheel">
            <summary>
                是否响应鼠标滚轮操作
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ScrollViewer.IsEnableInertiaProperty">
            <summary>
                是否支持惯性
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ScrollViewer.IsEnableInertia">
            <summary>
                是否支持惯性
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ScrollViewer.IsPenetratingProperty">
            <summary>
                控件是否可以穿透点击
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ScrollViewer.IsPenetrating">
            <summary>
                控件是否可以穿透点击
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ScrollViewer.CurrentVerticalOffsetProperty">
            <summary>
                当前垂直滚动偏移
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ScrollViewer.CurrentVerticalOffset">
            <summary>
                当前垂直滚动偏移
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ScrollViewer.CurrentHorizontalOffsetProperty">
            <summary>
                当前水平滚动偏移
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ScrollViewer.CurrentHorizontalOffset">
            <summary>
                当前水平滚动偏移
            </summary>
        </member>
        <member name="T:DH.MUI.Controls.SimplePanel">
            <summary>
                用以代替Grid
            </summary>
            <remarks>
                当不需要Grid的行、列分隔等功能时建议用此轻量级类代替
            </remarks>
        </member>
        <member name="M:DH.MUI.Controls.SimplePanel.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:DH.MUI.Controls.SimplePanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="arrangeSize"></param>
            <returns></returns>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.ClickEvent">
            <summary>Identifies the <see cref="E:DH.MUI.Controls.SplitButton.Click"/> routed event.</summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.ExtraTagProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.ExtraTag"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.ExtraTag">
            <summary>
            Gets or sets an extra tag.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.OrientationProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.Orientation"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.Orientation">
            <summary>
            Gets or sets the orientation of children stacking.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.IconProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.Icon"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.Icon">
            <summary>
            Gets or sets the content for the icon part.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.IconTemplateProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.IconTemplate"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.IconTemplate">
            <summary> 
            Gets or sets the DataTemplate for the icon part.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.CommandProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.Command"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.Command">
            <summary>
            Gets or sets the command to invoke when the content button is pressed.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.CommandTargetProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.CommandTarget"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.CommandTarget">
            <summary>
            Gets or sets the element on which to raise the specified command.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.CommandParameterProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.CommandParameter"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.CommandParameter">
            <summary>
            Gets or sets the parameter to pass to the command property.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.ButtonStyleProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.ButtonStyle"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.ButtonStyle">
            <summary>
            Gets or sets the button content style.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.ButtonArrowStyleProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.ButtonArrowStyle"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.ButtonArrowStyle">
            <summary>
            Gets or sets the button arrow style.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.ArrowBrushProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.ArrowBrush"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.ArrowBrush">
            <summary>
            Gets or sets the foreground brush for the button arrow icon.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.ArrowMouseOverBrushProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.ArrowMouseOverBrush"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.ArrowMouseOverBrush">
            <summary>
            Gets or sets the foreground brush of the button arrow icon if the mouse is over the split button.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.SplitButton.ArrowPressedBrushProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.SplitButton.ArrowPressedBrush"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.SplitButton.ArrowPressedBrush">
            <summary>
            Gets or sets the foreground brush of the button arrow icon if the arrow button is pressed.
            </summary>
        </member>
        <member name="T:DH.MUI.Controls.DpiAwareWindow">
            <summary>
            A window instance that is capable of per-monitor DPI awareness when supported.
            </summary>
        </member>
        <member name="E:DH.MUI.Controls.DpiAwareWindow.DPIChanged">
            <summary>
            Occurs when the system or monitor DPI for this window has changed.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.DpiAwareWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DH.MUI.Controls.DpiAwareWindow"/> class.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.DpiAwareWindow.DpiInformation">
            <summary>
            Gets the DPI information for this window instance.
            </summary>
            <remarks>
            DPI information is available after a window handle has been created.
            </remarks>
        </member>
        <member name="M:DH.MUI.Controls.DpiAwareWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the System.Windows.Window.Closed event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DH.MUI.Controls.DpiAwareWindow.RefreshMonitorDpi">
            <summary>
            Refreshes the current monitor DPI settings and update the window size and layout scale accordingly.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.DpiAwareWindow.OnDpiChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DpiChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DH.MUI.Controls.DpiInformation">
            <summary>
            Provides DPI information for a window.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.DpiInformation.WpfDpiX">
            <summary>
            Gets the horizontal resolution of the WPF rendering DPI.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.DpiInformation.WpfDpiY">
            <summary>
            Gets the vertical resolution of the WPF rendering DPI.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.DpiInformation.MonitorDpiX">
            <summary>
            Gets the horizontal resolution of the current monitor DPI.
            </summary>
            <remarks>Null when the process is not per monitor DPI aware.</remarks>
        </member>
        <member name="P:DH.MUI.Controls.DpiInformation.MonitorDpiY">
            <summary>
            Gets the vertical resolution of the current monitor DPI.
            </summary>
            <remarks>Null when the process is not per monitor DPI aware.</remarks>
        </member>
        <member name="P:DH.MUI.Controls.DpiInformation.ScaleX">
            <summary>
            Gets the x-axis scale factor.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.DpiInformation.ScaleY">
            <summary>
            Gets the y-axis scale factor.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.BackgroundContentProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.BackgroundContent"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.TitleBarHeightProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.TitleBarHeight"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.TitleAlignmentProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.TitleAlignment"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.ShowTitleProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.ShowTitle"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.ShowIconProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.ShowIcon"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.LeftWindowCommandsProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.LeftWindowCommands"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.RightWindowCommandsProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.RightWindowCommands"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.ShowMinButtonProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.ShowMinButton"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.ShowMaxRestoreButtonProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.ShowMaxRestoreButton"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.ModernWindow.ShowCloseButtonProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.ModernWindow.ShowCloseButton"/> dependency property.</summary>
        </member>
        <member name="M:DH.MUI.Controls.ModernWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DH.MUI.Controls.ModernWindow"/> class.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.BackgroundContent">
            <summary>
            Gets or sets the background content of this window instance.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.TitleBarHeight">
            <summary>
            Gets/sets the TitleBar's height.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.TitleAlignment">
            <summary>
            Gets/sets the title horizontal alignment.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.ShowTitle">
            <summary>
            Gets or sets a value indicating whether the window title is visible in the UI.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.ShowIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.ShowMinButton">
            <summary>
            Gets or sets whether if the minimize button is visible and the minimize system menu is enabled.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.ShowMaxRestoreButton">
            <summary>
            Gets or sets whether if the maximize/restore button is visible and the maximize/restore system menu is enabled.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.ShowCloseButton">
            <summary>
            Gets or sets whether if the close button is visible.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.LeftWindowCommands">
            <summary>
            Gets/sets the left window commands that hosts the user commands.
            </summary>
        </member>
        <member name="P:DH.MUI.Controls.ModernWindow.RightWindowCommands">
            <summary>
            Gets/sets the right window commands that hosts the user commands.
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ModernWindow.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call System.Windows.FrameworkElement.ApplyTemplate().
            </summary>
        </member>
        <member name="M:DH.MUI.Controls.ModernWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the System.Windows.Window.Closed event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommands.ShowSeparatorsProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommands.ShowSeparators"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.WindowCommands.ShowSeparators">
            <summary>
            Gets or sets the value indicating whether to show the separators or not.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommands.ShowLastSeparatorProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommands.ShowLastSeparator"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.WindowCommands.ShowLastSeparator">
            <summary>
            Gets or sets the value indicating whether to show the last separator or not.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommands.SeparatorHeightProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommands.SeparatorHeight"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.WindowCommands.SeparatorHeight">
            <summary>
            Gets or sets the value indicating the height of the separators.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommands.ParentWindowPropertyKey">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommands.ParentWindow"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommands.ParentWindowProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommands.ParentWindow"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.WindowCommands.ParentWindow">
            <summary>
            Gets the window.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommandsItem.IsSeparatorVisibleProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommandsItem.IsSeparatorVisible"/> dependency property.</summary>
        </member>
        <member name="P:DH.MUI.Controls.WindowCommandsItem.IsSeparatorVisible">
            <summary>
            Gets or sets the value indicating whether to show the separator.
            </summary>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommandsItem.ParentWindowCommandsPropertyKey">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommandsItem.ParentWindowCommands"/> dependency property.</summary>
        </member>
        <member name="F:DH.MUI.Controls.WindowCommandsItem.ParentWindowCommandsProperty">
            <summary>Identifies the <see cref="P:DH.MUI.Controls.WindowCommandsItem.ParentWindowCommands"/> dependency property.</summary>
        </member>
        <member name="M:DH.MUI.Controls.WindowCommandsItem.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="T:DH.MUI.Converters.BoolToFontWeightConverter">
            <summary>
            Converts a boolean value to a font weight (false: normal, true: bold)
            </summary>
        </member>
        <member name="M:DH.MUI.Converters.BoolToFontWeightConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:DH.MUI.Converters.BoolToFontWeightConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:DH.MUI.Converters.BoolToVisibilityConverter">
            <summary>
            Converts boolean to visibility values.
            </summary>
        </member>
        <member name="P:DH.MUI.Converters.BoolToVisibilityConverter.Default">
            <summary> Gets the default instance </summary>
        </member>
        <member name="M:DH.MUI.Converters.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:DH.MUI.Converters.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:DH.MUI.Converters.IsNullConverter">
            <summary>
            Converts a null value to Visibility.Visible and any other value to Visibility.Collapsed
            </summary>
        </member>
        <member name="P:DH.MUI.Converters.IsNullConverter.Default">
            <summary> Gets the default instance </summary>
        </member>
        <member name="M:DH.MUI.Converters.IsNullConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:DH.MUI.Converters.IsNullConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:DH.MUI.Converters.ToLowerConverter">
            <summary>
            Converts string values to lower case.
            </summary>
        </member>
        <member name="P:DH.MUI.Converters.ToLowerConverter.Default">
            <summary> Gets the default instance </summary>
        </member>
        <member name="M:DH.MUI.Converters.ToLowerConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:DH.MUI.Converters.ToLowerConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:DH.MUI.Converters.ToUpperConverter">
            <summary>
            Converts string values to upper case.
            </summary>
        </member>
        <member name="P:DH.MUI.Converters.ToUpperConverter.Default">
            <summary> Gets the default instance </summary>
        </member>
        <member name="M:DH.MUI.Converters.ToUpperConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:DH.MUI.Converters.ToUpperConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:DH.MUI.LocalizationHelper">
            <summary>
            Deals with localization behaviors.
            </summary>
        </member>
        <member name="M:DH.MUI.LocalizationHelper.Get(System.String,System.Boolean)">
            <summary>
            Gets a resource as string.
            </summary>
            <param name="key">The key of the string resource.</param>
            <param name="removeNewLines">If true, it removes any kind of new lines.</param>
            <returns>A string resource, usually a localized string.</returns>
        </member>
        <member name="M:DH.MUI.LocalizationHelper.GetWithFormat(System.String,System.Object[])">
            <summary>
            Gets a resource as string and applies the format.
            </summary>
            <param name="key">The key of the string resource.</param>
            <param name="values">The values for the string format.</param>
            <returns>A string resource, usually a localized string.</returns>
        </member>
        <member name="M:DH.MUI.LocalizationHelper.Get(System.String,System.String,System.Boolean)">
            <summary>
            Gets a resource as string.
            </summary>
            <param name="key">The key of the string resource.</param>
            <param name="defaultValue">The default value in english.</param>
            <param name="removeNewLines">If true, it removes any kind of new lines.</param>
            <returns>A string resource, usually a localized string.</returns>
        </member>
        <member name="M:DH.MUI.LocalizationHelper.GetWithFormat(System.String,System.String,System.Object[])">
            <summary>
            Gets a resource as string and applies the format.
            </summary>
            <param name="key">The key of the string resource.</param>
            <param name="defaultValue">The default value in english.</param>
            <param name="values">The values for the string format.</param>
            <returns>A string resource, usually a localized string.</returns>
        </member>
        <member name="M:DH.MUI.LocalizationHelper.GetWithIndex(System.Int32,System.String,System.String[])">
            <summary>
            Gets a resource as string.
            </summary>
            <param name="index"></param>
            <param name="key">The key of the string resource.</param>
            <param name="values">The possible values that composite the key name.</param>
            <returns>A string resource, usually a localized string.</returns>
        </member>
        <member name="T:DH.MUI.ModernUIHelper">
            <summary>
            Provides various common helper methods.
            </summary>
        </member>
        <member name="P:DH.MUI.ModernUIHelper.IsInDesignMode">
            <summary>
            Determines whether the current code is executed in a design time environment such as Visual Studio or Blend.
            </summary>
        </member>
        <member name="M:DH.MUI.ModernUIHelper.GetDpiAwareness">
            <summary>
            Gets the DPI awareness of the current process.
            </summary>
            <returns>
            The DPI awareness of the current process
            </returns>
            <exception cref="T:System.ComponentModel.Win32Exception"></exception>
        </member>
        <member name="M:DH.MUI.ModernUIHelper.TrySetPerMonitorDpiAware">
            <summary>
            Attempts to set the DPI awareness of this process to PerMonitorDpiAware
            </summary>
            <returns>A value indicating whether the DPI awareness has been set to PerMonitorDpiAware.</returns>
            <remarks>
            <para>
            For this operation to succeed the host OS must be Windows 8.1 or greater, and the initial
            DPI awareness must be set to DpiUnaware (apply [assembly:DisableDpiAwareness] to application assembly).
            </para>
            <para>
            When the host OS is Windows 8 or lower, an attempt is made to set the DPI awareness to SystemDpiAware (= WPF default). This
            effectively revokes the [assembly:DisableDpiAwareness] attribute if set.
            </para>
            </remarks>
        </member>
        <member name="T:DH.MUI.Presentation.AppearanceManager">
            <summary>
            Manages the theme, font size and accent colors for a Modern UI application.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.AppearanceManager.DarkThemeSource">
            <summary>
            The location of the dark theme resource dictionary.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.AppearanceManager.LightThemeSource">
            <summary>
            The location of the light theme resource dictionary.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.AppearanceManager.KeyAccentColor">
            <summary>
            The resource key for the accent color.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.AppearanceManager.KeyAccent">
            <summary>
            The resource key for the accent brush.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.AppearanceManager.KeyDefaultFontSize">
            <summary>
            The resource key for the default font size.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.AppearanceManager.KeyFixedFontSize">
            <summary>
            The resource key for the fixed font size.
            </summary>
        </member>
        <member name="M:DH.MUI.Presentation.AppearanceManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DH.MUI.Presentation.AppearanceManager"/> class.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.Current">
            <summary>
            Gets the current <see cref="T:DH.MUI.Presentation.AppearanceManager"/> instance.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.DarkThemeCommand">
            <summary>
            The command that sets the dark theme.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.LightThemeCommand">
            <summary>
            The command that sets the light color theme.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.SetThemeCommand">
            <summary>
            The command that sets a custom theme.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.LargeFontSizeCommand">
            <summary>
            The command that sets the large font size.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.SmallFontSizeCommand">
            <summary>
            The command that sets the small font size.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.AccentColorCommand">
            <summary>
            The command that sets the accent color.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.ThemeSource">
            <summary>
            Gets or sets the current theme source.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:DH.MUI.Presentation.AppearanceManager.AccentColor">
            <summary>
            Gets or sets the accent color.
            </summary>
        </member>
        <member name="T:DH.MUI.Presentation.CommandBase">
            <summary>
            The base implementation of a command.
            </summary>
        </member>
        <member name="E:DH.MUI.Presentation.CommandBase.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:DH.MUI.Presentation.CommandBase.OnCanExecuteChanged">
            <summary>
            Raises the <see cref="E:DH.MUI.Presentation.CommandBase.CanExecuteChanged" /> event.
            </summary>
        </member>
        <member name="M:DH.MUI.Presentation.CommandBase.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:DH.MUI.Presentation.CommandBase.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:DH.MUI.Presentation.CommandBase.OnExecute(System.Object)">
            <summary>
            Executes the command.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="T:DH.MUI.Presentation.FontSize">
            <summary>
            Identifies the available font size.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.FontSize.Large">
            <summary>
            Large fonts.
            </summary>
        </member>
        <member name="F:DH.MUI.Presentation.FontSize.Small">
            <summary>
            Small fonts.
            </summary>
        </member>
        <member name="T:DH.MUI.Presentation.NotifyPropertyChanged">
            <summary>
            The base implementation of the INotifyPropertyChanged contract.
            </summary>
        </member>
        <member name="E:DH.MUI.Presentation.NotifyPropertyChanged.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:DH.MUI.Presentation.NotifyPropertyChanged.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:DH.MUI.Presentation.NotifyPropertyChanged.Set``1(``0@,``0,System.String)">
            <summary>
            Updates specified value, and raises the <see cref="E:DH.MUI.Presentation.NotifyPropertyChanged.PropertyChanged"/> event when the value has changed.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="storage">The current stored value</param>
            <param name="value">The new value</param>
            <param name="propertyName">The optional property name, automatically set to caller member name when not set.</param>
            <returns>Indicates whether the value has changed.</returns>
        </member>
        <member name="T:DH.MUI.Presentation.RelayCommand">
            <summary>
            The command that relays its functionality by invoking delegates.
            </summary>
        </member>
        <member name="M:DH.MUI.Presentation.RelayCommand.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DH.MUI.Presentation.RelayCommand"/> class.
            </summary>
            <param name="execute">The execute.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="M:DH.MUI.Presentation.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:DH.MUI.Presentation.RelayCommand.OnExecute(System.Object)">
            <summary>
            Executes the command.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="T:DH.MUI.ProcessDpiAwareness">
            <summary>
            Identifies dots per inch (dpi) awareness values.
            </summary>
        </member>
        <member name="F:DH.MUI.ProcessDpiAwareness.DpiUnaware">
            <summary>
            Process is not DPI aware.
            </summary>
        </member>
        <member name="F:DH.MUI.ProcessDpiAwareness.SystemDpiAware">
            <summary>
            Process is system DPI aware (= WPF default).
            </summary>
        </member>
        <member name="F:DH.MUI.ProcessDpiAwareness.PerMonitorDpiAware">
            <summary>
            Process is per monitor DPI aware (Win81+ only).
            </summary>
        </member>
        <member name="T:DH.MUI.Win32.OSVersionHelper">
            <summary>
            .NET wrapper for Version Helper functions.
            http://msdn.microsoft.com/library/windows/desktop/dn424972.aspx
            </summary>
        </member>
        <member name="T:DH.MUI.Win32.OSVersionHelper.KnownOS">
            <summary>
            Operating systems, the information which is stored within
            the class <seealso cref="T:DH.MUI.Win32.OSVersionHelper"/>.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.WindowsXP">
            <summary>
            Windows XP.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.WindowsXPSP1">
            <summary>
            Windows XP SP1.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.WindowsXPSP2">
            <summary>
            Windows XP SP2.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.WindowsXPSP3">
            <summary>
            Windows XP SP3.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.WindowsVista">
            <summary>
            Windows Vista.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.WindowsVistaSP1">
            <summary>
            Windows Vista SP1.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.WindowsVistaSP2">
            <summary>
            Windows Vista SP2.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.Windows7">
            <summary>
            Windows 7.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.Windows7SP1">
            <summary>
            Windows 7 SP1.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.Windows8">
            <summary>
            Windows 8.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.KnownOS.Windows8Point1">
            <summary>
            Windows 8.1.
            </summary>
        </member>
        <member name="T:DH.MUI.Win32.OSVersionHelper.OsEntry">
            <summary>
            Information about operating system.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.OsEntry.MajorVersion">
            <summary>
            The major version number of the operating system.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.OsEntry.MinorVersion">
            <summary>
            The minor version number of the operating system.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.OsEntry.ServicePackMajor">
            <summary>
            The major version number of the latest Service Pack installed
            on the system. For example, for Service Pack 3, the major
            version number is 3. If no Service Pack has been installed,
            the value is zero.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.OsEntry.MatchesOrGreater">
            <summary>
            Flag indicating if the running OS matches, or is greater
            than, the OS specified with this entry. Should be initialized
            with <see cref="M:DH.MUI.Win32.OSVersionHelper.VerifyVersionInfo(DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx@,System.UInt32,System.UInt64)"/> method.
            </summary>
        </member>
        <member name="M:DH.MUI.Win32.OSVersionHelper.OsEntry.#ctor(System.UInt32,System.UInt32,System.UInt16)">
            <summary>
            Creates a new entry of operating system.
            </summary>
            <param name="majorVersion">The major version number of the
            operating system.</param>
            <param name="minorVersion">The minor version number of the
            operating system.</param>
            <param name="servicePackMajor">The major version number of the
            latest Service Pack installed on the system. For example, for
            Service Pack 3, the major version number is 3. If no Service
            Pack has been installed, the value is zero.</param>
        </member>
        <member name="T:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx">
            <summary>
            Wrapper for OSVERSIONINFOEX structure.
            http://msdn.microsoft.com/library/windows/desktop/ms724833.aspx
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.OSVersionInfoSize">
            <summary>
            The size of this data structure, in bytes.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.MajorVersion">
            <summary>
            The major version number of the operating system.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.MinorVersion">
            <summary>
            The minor version number of the operating system.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.BuildNumber">
            <summary>
            The build number of the operating system.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.PlatformId">
            <summary>
            The operating system platform.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.CSDVersion">
            <summary>
            A null-terminated string, such as "Service Pack 3", that
            indicates the latest Service Pack installed on the system. If
            no Service Pack has been installed, the string is empty.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.ServicePackMajor">
            <summary>
            The major version number of the latest Service Pack installed
            on the system. For example, for Service Pack 3, the major
            version number is 3. If no Service Pack has been installed,
            the value is zero.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.ServicePackMinor">
            <summary>
            The minor version number of the latest Service Pack installed
            on the system. For example, for Service Pack 3, the minor
            version number is 0.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.SuiteMask">
            <summary>
            A bit mask that identifies the product suites available on the
            system, e.g., flags indicating if the operating system is
            Datacenter Server or Windows XP Embedded.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.ProductType">
            <summary>
            Any additional information about the system, e.g., flags
            indicating if the operating system is a domain controller,
            a server or a workstation.
            </summary>
        </member>
        <member name="F:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx.Reserved">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="M:DH.MUI.Win32.OSVersionHelper.VerSetConditionMask(System.UInt64,System.UInt32,System.Byte)">
            <summary>
            <para>Wrapper for VerSetConditionMask function (
            http://msdn.microsoft.com/library/windows/desktop/ms725493.aspx).
            </para>
            <para>
            Sets the bits of a 64-bit value to indicate the comparison
            operator to use for a specified operating system version
            attribute. This method is used to build the dwlConditionMask
            parameter of the <see cref="M:DH.MUI.Win32.OSVersionHelper.VerifyVersionInfo(DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx@,System.UInt32,System.UInt64)"/> method.
            </para>
            </summary>
            <param name="dwlConditionMask">
            <para>A value to be passed as the dwlConditionMask parameter of
            the <see cref="M:DH.MUI.Win32.OSVersionHelper.VerifyVersionInfo(DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx@,System.UInt32,System.UInt64)"/> method. The function stores
            the comparison information in the bits of this variable.
            </para>
            <para>
            Before the first call to VerSetConditionMask, initialize this
            variable to zero. For subsequent calls, pass in the variable used
            in the previous call.
            </para>
            </param>
            <param name="dwTypeBitMask">A mask that indicates the member of
            the <see cref="T:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx"/> structure whose comparison
            operator is being set.</param>
            <param name="dwConditionMask">The operator to be used for the
            comparison.</param>
            <returns>Condition mask value.</returns>
        </member>
        <member name="M:DH.MUI.Win32.OSVersionHelper.VerifyVersionInfo(DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx@,System.UInt32,System.UInt64)">
            <summary>
            <para>
            Wrapper for VerifyVersionInfo function (
            http://msdn.microsoft.com/library/windows/desktop/ms725492.aspx).
            </para>
            <para>
            Compares a set of operating system version requirements to the
            corresponding values for the currently running version of the
            system.
            </para>
            </summary>
            <param name="lpVersionInfo">A pointer to an
            <see cref="T:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx"/> structure containing the operating
            system version requirements to compare.</param>
            <param name="dwTypeMask">A mask that indicates the members of the
            <see cref="T:DH.MUI.Win32.OSVersionHelper.OsVersionInfoEx"/> structure to be tested.</param>
            <param name="dwlConditionMask">The type of comparison to be used
            for each lpVersionInfo member being compared. Can be constructed
            with <see cref="M:DH.MUI.Win32.OSVersionHelper.VerSetConditionMask(System.UInt64,System.UInt32,System.Byte)"/> method.</param>
            <returns>True if the current Windows OS satisfies the specified
            requirements; otherwise, false.</returns>
        </member>
        <member name="M:DH.MUI.Win32.OSVersionHelper.IsWindowsVersionOrGreater(System.UInt32,System.UInt32,System.UInt16)">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the provided version information. This method is useful in
            confirming a version of Windows Server that doesn't share a
            version number with a client release.
            </summary>
            <param name="majorVersion">The major OS version number.</param>
            <param name="minorVersion">The minor OS version number.</param>
            <param name="servicePackMajor">The major Service Pack version
            number.</param>
            <returns>True if the the running OS matches, or is greater
            than, the specified version information; otherwise, false.
            </returns>
        </member>
        <member name="M:DH.MUI.Win32.OSVersionHelper.IsWindowsVersionOrGreater(DH.MUI.Win32.OSVersionHelper.KnownOS)">
            <summary>
            Indicates if the running OS version matches, or is greater than,
            the provided OS.
            </summary>
            <param name="os">OS to compare running OS to.</param>
            <returns>True if the the running OS matches, or is greater
            than, the specified OS; otherwise, false.</returns>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsXPOrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows XP version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsXPSP1OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows XP with Service Pack 1 (SP1) version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsXPSP2OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows XP with Service Pack 2 (SP2) version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsXPSP3OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows XP with Service Pack 3 (SP3) version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsVistaOrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows Vista version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsVistaSP1OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows Vista with Service Pack 1 (SP1) version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsVistaSP2OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows Vista with Service Pack 2 (SP2) version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindows7OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows 7 version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindows7SP1OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows 7 with Service Pack 1 (SP1) version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindows8OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows 8 version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindows8Point1OrGreater">
            <summary>
            Indicates if the current OS version matches, or is greater than,
            the Windows 8.1 version.
            </summary>
        </member>
        <member name="P:DH.MUI.Win32.OSVersionHelper.IsWindowsServer">
            <summary>
            Indicates if the current OS is a Windows Server release.
            </summary>
        </member>
    </members>
</doc>
